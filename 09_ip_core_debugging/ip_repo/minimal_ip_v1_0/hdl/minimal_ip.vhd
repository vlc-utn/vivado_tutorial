-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/minimalIpCore/minimal_ip.vhd
-- Created: 2024-08-25 17:48:01
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: minimal_ip
-- Source Path: minimal_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY minimal_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        in_a                              :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        in_b                              :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        a_times_b                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        a_plus_b                          :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9
        );
END minimal_ip;


ARCHITECTURE rtl OF minimal_ip IS

  -- Component Declarations
  COMPONENT minimal_ip_reset_sync
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_in                        :   IN    std_logic;  -- ufix1
          reset_out                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT minimal_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset_x                         :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          in_a                            :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          in_b                            :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          ce_out                          :   OUT   std_logic;  -- ufix1
          a_times_b                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          a_plus_b                        :   OUT   std_logic_vector(8 DOWNTO 0)  -- ufix9
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : minimal_ip_reset_sync
    USE ENTITY work.minimal_ip_reset_sync(rtl);

  FOR ALL : minimal_ip_dut
    USE ENTITY work.minimal_ip_dut(rtl);

  -- Signals
  SIGNAL reset_x                          : std_logic;
  SIGNAL dut_enable                       : std_logic;  -- ufix1
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL a_times_b_sig                    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL a_plus_b_sig                     : std_logic_vector(8 DOWNTO 0);  -- ufix9

BEGIN
  u_minimal_ip_reset_sync_inst : minimal_ip_reset_sync
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_in => reset_cm,  -- ufix1
              reset_out => reset_x
              );

  u_minimal_ip_dut_inst : minimal_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset_x => reset_x,
              dut_enable => dut_enable,  -- ufix1
              in_a => in_a,  -- ufix8
              in_b => in_b,  -- ufix8
              ce_out => ce_out_sig,  -- ufix1
              a_times_b => a_times_b_sig,  -- ufix16
              a_plus_b => a_plus_b_sig  -- ufix9
              );

  dut_enable <= '1';

  reset_cm <=  NOT IPCORE_RESETN;

  a_times_b <= a_times_b_sig;

  a_plus_b <= a_plus_b_sig;

END rtl;

